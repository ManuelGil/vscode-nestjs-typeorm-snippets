{
  "TypeORM Tree": {
    "prefix": ["ns_typeorm_deco_tree", "@Tree"],
    "description": "Tree entity scaffold with parent/children relations",
    "scope": "typescript",
    "body": ["import { Entity, Tree, TreeChildren, TreeParent, PrimaryGeneratedColumn } from 'typeorm';", "", "@Entity()", "@Tree('${1|closure-table,nested-set,materialized-path|}')", "export class ${2:EntityName} {", "  @PrimaryGeneratedColumn()", "  id: number;", "", "  @TreeParent()", "  parent: ${2:EntityName};", "", "  @TreeChildren()", "  children: ${2:EntityName}[];", "}", "$0"]
  },
  "TypeORM TreeChildren": {
    "prefix": ["ns_typeorm_deco_tree_children", "@TreeChildren"],
    "description": "@TreeChildren property decorator",
    "scope": "typescript",
    "body": ["@TreeChildren()", "children: ${1:EntityName}[];", "$0"]
  },
  "TypeORM TreeLevelColumn": {
    "prefix": ["ns_typeorm_deco_tree_level", "@TreeLevelColumn"],
    "description": "@TreeLevelColumn to store level of the node",
    "scope": "typescript",
    "body": ["@TreeLevelColumn()", "level: number;", "$0"]
  },
  "TypeORM TreeParent": {
    "prefix": ["ns_typeorm_deco_tree_parent", "@TreeParent"],
    "description": "@TreeParent property decorator",
    "scope": "typescript",
    "body": ["@TreeParent()", "parent: ${1:EntityName};", "$0"]
  }
}
